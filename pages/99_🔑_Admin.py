import streamlit as st
from supabase import create_client, Client

# --- INICIALIZA칂츾O DA CONEX츾O COM O SUPABASE ---

# Fun칞칚o para inicializar a conex칚o. Usa o cache do Streamlit para evitar reconectar a cada intera칞칚o.
@st.cache_resource
def init_connection() -> Client:
    """Inicializa e retorna o cliente do Supabase."""
    url = st.secrets["SUPABASE_URL"]
    key = st.secrets["SUPABASE_KEY"]
    return create_client(url, key)

# Cria o cliente Supabase
supabase = init_connection()

# --- FUN칂칏ES DE CONSULTA AO BANCO ---

def get_gestoras():
    """Busca todas as gestoras para popular o selectbox."""
    response = supabase.table('gestoras').select('id, nome').execute()
    return {item['nome']: item['id'] for item in response.data}

def get_paises():
    """Busca todos os pa칤ses para popular o selectbox."""
    response = supabase.table('paises').select('id, nome').execute()
    return {item['nome']: item['id'] for item in response.data}

# --- INTERFACE DA P츼GINA ADMIN ---

st.set_page_config(page_title="Painel Admin", page_icon="游댐", layout="wide")
st.title("游댐 Painel de Administra칞칚o")
st.write("츼rea para inser칞칚o e gerenciamento de conte칰do da plataforma.")
st.markdown("---")

# --- SISTEMA DE AUTENTICA칂츾O SIMPLES ---

# Pede a senha ao usu치rio
password = st.text_input("Digite a senha para acessar o painel", type="password")

# Verifica se a senha est치 correta (comparando com o que est치 nos Secrets)
if password == st.secrets["ADMIN_PASSWORD"]:
    st.success("Acesso liberado!")

    # Carrega os dados para os dropdowns
    gestoras_map = get_gestoras()
    paises_map = get_paises()

    st.header("Inserir Nova An치lise Macro")

    # Cria um formul치rio para a inser칞칚o de dados
    with st.form("nova_analise_form", clear_on_submit=True):
        # Campos do formul치rio
        titulo = st.text_input("T칤tulo da An치lise")
        
        # Dropdowns para selecionar itens de outras tabelas
        gestora_nome = st.selectbox("Selecione a Gestora", options=list(gestoras_map.keys()))
        pais_nome = st.selectbox("Selecione o Pa칤s", options=list(paises_map.keys()))
        
        visao = st.selectbox("Vis칚o", options=["Overweight", "Neutral", "Underweight", "N/A"])
        tipo_analise = "Macro" # Por enquanto, fixo como "Macro"
        
        resumo = st.text_area("Resumo (aparecer치 nas listagens)")
        texto_completo = st.text_area("Texto Completo da An치lise", height=300)
        
        # Bot칚o de envio do formul치rio
        submitted = st.form_submit_button("Salvar An치lise")

        # L칩gica a ser executada quando o bot칚o for clicado
        if submitted:
            # Pega o ID correspondente ao nome selecionado nos dropdowns
            gestora_id = gestoras_map[gestora_nome]
            pais_id = paises_map[pais_nome]
            
            # Monta o objeto a ser inserido no banco
            nova_analise_data = {
                'titulo': titulo,
                'resumo': resumo,
                'texto_completo': texto_completo,
                'tipo_analise': tipo_analise,
                'visao': visao,
                'gestora_id': gestora_id,
                'pais_id': pais_id
            }
            
            # Tenta inserir os dados na tabela 'analises'
            try:
                response = supabase.table('analises').insert(nova_analise_data).execute()
                st.success("An치lise salva com sucesso!")
            except Exception as e:
                st.error(f"Erro ao salvar a an치lise: {e}")

elif password: # Se o usu치rio digitou algo, mas a senha est치 errada
    st.error("Senha incorreta. Tente novamente.")
